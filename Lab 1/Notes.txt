SQL Injection
===============

> Armoghan-ul-MOhmin | November 25, 2022

--------------------------
Lab no:1
url: https://portswigger.net/web-security/sql-injection/lab-retrieve-hidden-data

Lab url: https://portswigger.net/academy/labs/launch/d9a071d8264e85184722707ff5747bbbd77963967d1d01f1b22f5dd8252f9767?referrer=%2fweb-security%2fsql-injection%2flab-retrieve-hidden-data

Goal: Perform an SQL injection attack that causes the application to display details of all products in any category, both released and unreleased.  

--------------------------

Analysis:
==========

1. First come in gifts category and focus on url
2. Now check if the web app is vulnerabil or not by using ` which will give sintax error at backend proving that webapp is vulnerabil.
3. Or you can use SQLMap to identify if webapp is vulnerabil to sql injection or not.
4. Right now the SQL query running in background is :
    SELECT * FROM products WHERE category = 'Gifts' AND released = 1
5. Break the query by adding '-- after Gifts in url 
6. -- is used to comment anything in sql so webapp will treat anthing after -- as comment
7. Which will result a successfull Sql Injection Attack. 

Solution:
=========

1. Use Burp Suite to intercept and modify the request that sets the product category filter.
2. Modify the category parameter, giving it the value '+OR+1=1--
3. Submit the request, and verify that the response now contains additional items.

